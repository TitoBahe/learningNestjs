var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.319,1,1.846]],["body/controllers/AppController.html",[0,1.942,1,2.717,2,1.482,3,0.376,4,0.319,5,0.319,6,2.753,7,0.987,8,1.942,9,4.272,10,2.073,11,0.038,12,1.208,13,3.344,14,1.482,15,1.584,16,0.943,17,0.891,18,2.409,19,2.753,20,0.376,21,0.094,22,2.363,23,1.841,24,1.482,25,3.344,26,0.028,27,0.028]],["title/modules/AppModule.html",[28,1.076,29,1.846]],["body/modules/AppModule.html",[1,2.516,2,1.523,3,0.265,4,0.224,5,0.224,11,0.038,16,1.1,17,0.627,18,2.441,19,1.939,20,0.265,21,0.066,26,0.022,27,0.022,28,1.467,29,3.515,30,1.044,31,1.044,32,1.296,33,1.296,34,1.044,35,2.234,36,1.296,37,1.939,38,1.939,39,1.939,40,2.727,41,2.441,42,2.727,43,2.196,44,1.892,45,1.296,46,1.16,47,2.355,48,2.83,49,2.355,50,2.355,51,2.355,52,1.242,53,1.693,54,1.665,55,1.939]],["title/injectables/AppService.html",[18,1.467,56,1.076]],["body/injectables/AppService.html",[3,0.403,4,0.341,5,0.341,7,1.058,8,2.031,9,4.386,11,0.038,12,1.295,14,1.588,15,1.657,16,0.771,17,0.955,18,2.258,20,0.403,21,0.101,24,1.588,26,0.03,27,0.03,56,1.657,57,1.973,58,2.95,59,3.583,60,3.583,61,3.583]],["title/classes/Author.html",[21,0.084,62,1.319]],["body/classes/Author.html",[3,0.482,4,0.408,5,0.408,11,0.035,20,0.482,21,0.12,26,0.033,27,0.033,62,2.268,63,1.547,64,3.525]],["title/controllers/AuthorController.html",[0,1.319,65,1.846]],["body/controllers/AuthorController.html",[0,0.83,2,0.83,3,0.211,4,0.178,5,0.178,7,0.553,8,1.282,10,2.665,11,0.039,12,1.554,14,1.905,15,1.815,16,0.856,17,0.499,20,0.211,21,0.053,22,1.324,23,1.031,24,1.905,26,0.019,27,0.019,52,1.278,62,0.83,65,1.794,66,1.542,67,1.542,68,1.593,69,2.812,70,2.046,71,2.046,72,2.046,73,1.542,74,2.239,75,1.873,76,2.466,77,2.19,78,1.591,79,2.466,80,1.873,81,1.324,82,2.894,83,1.873,84,3.213,85,1.324,86,2.894,87,1.873,88,1.324,89,2.694,90,2.894,91,1.873,92,2.382,93,1.542,94,1.542,95,1.542,96,1.742,97,1.542,98,1.161,99,2.046,100,1.161,101,1.873,102,1.873,103,1.873,104,1.873,105,1.873,106,1.873,107,1.873,108,1.873,109,1.873,110,1.873]],["title/modules/AuthorModule.html",[28,1.076,40,1.639]],["body/modules/AuthorModule.html",[2,1.868,3,0.355,4,0.3,5,0.3,11,0.038,16,1.021,17,0.84,20,0.355,21,0.089,26,0.027,27,0.027,28,1.716,30,1.397,31,1.397,32,1.735,33,1.735,34,1.397,35,2.614,36,1.735,40,2.993,44,2.32,45,1.735,46,1.553,65,2.944,96,2.679,97,2.595,111,2.595,112,2.595,113,3.152,114,3.152]],["title/injectables/AuthorService.html",[56,1.076,96,1.467]],["body/injectables/AuthorService.html",[3,0.228,4,0.193,5,0.193,7,0.598,8,1.361,11,0.038,12,1.609,14,2.158,15,1.609,16,0.798,17,0.54,20,0.228,21,0.057,24,1.973,26,0.02,27,0.02,56,1.11,57,1.115,62,1.973,68,1.691,69,2.928,70,2.171,71,2.171,72,2.171,73,2.529,74,2.194,76,2.568,77,2.28,78,1.656,79,2.568,81,2.171,84,3.313,85,2.171,88,2.171,89,2.681,96,1.513,98,1.255,99,2.171,100,1.255,115,1.667,116,2.025,117,2.025,118,3.631,119,2.025,120,2.025,121,2.025,122,3.666,123,1.667,124,1.255,125,1.431,126,1.667]],["title/classes/CreateAuthorDto.html",[21,0.084,74,1.467]],["body/classes/CreateAuthorDto.html",[3,0.478,4,0.405,5,0.405,11,0.035,20,0.478,21,0.12,26,0.033,27,0.033,63,1.535,74,2.51,127,3.498,128,3.003]],["title/classes/CreatePostDto.html",[21,0.084,129,1.467]],["body/classes/CreatePostDto.html",[3,0.478,4,0.405,5,0.405,11,0.035,20,0.478,21,0.12,26,0.033,27,0.033,63,1.535,129,2.51,130,3.498,131,3.003]],["title/classes/Post.html",[21,0.084,52,1.076]],["body/classes/Post.html",[3,0.482,4,0.408,5,0.408,11,0.035,20,0.482,21,0.12,26,0.033,27,0.033,52,1.849,63,1.547,132,3.525]],["title/modules/PostAllModule.html",[28,1.076,41,1.467]],["body/modules/PostAllModule.html",[3,0.347,4,0.294,5,0.294,11,0.037,16,0.893,17,0.821,20,0.347,21,0.087,26,0.027,27,0.027,28,1.696,30,1.365,31,1.365,32,1.696,33,1.696,34,1.365,35,2.584,36,2.285,41,2.72,43,2.57,44,2.285,45,1.696,46,1.518,52,1.113,53,1.518,54,2.178,133,2.537,134,3.081,135,2.537,136,2.178,137,3.081,138,3.081]],["title/injectables/PostAllService.html",[43,1.319,56,1.076]],["body/injectables/PostAllService.html",[3,0.339,4,0.287,5,0.287,7,0.89,8,1.812,11,0.038,12,1.478,14,1.336,15,1.677,16,0.648,17,0.803,20,0.339,21,0.085,23,2.555,24,1.336,26,0.026,27,0.026,43,2.206,53,2.287,56,1.478,57,1.659,78,1.205,136,3.281,139,2.481,140,2.015,141,3.281,142,4.641,143,4.977,144,3.014,145,2.481,146,2.481,147,4.089,148,3.014,149,3.014]],["title/controllers/PostController.html",[0,1.319,150,1.846]],["body/controllers/PostController.html",[0,0.765,2,0.765,3,0.194,4,0.164,5,0.164,7,0.51,8,1.203,10,2.359,11,0.038,12,1.375,14,1.686,15,1.588,16,0.989,17,0.46,20,0.194,21,0.049,22,1.22,23,1.495,24,1.686,26,0.018,27,0.018,43,1.487,52,1.495,53,0.85,54,1.22,67,1.421,76,2.081,77,2.095,78,1.342,79,2.081,92,2.763,93,1.421,94,1.421,95,1.421,98,1.07,100,1.07,124,2.081,129,0.85,141,1.919,150,1.683,151,1.421,152,2.715,153,2.715,154,3.805,155,2.715,156,1.726,157,2.359,158,2.715,159,1.726,160,2.715,161,1.726,162,2.715,163,1.726,164,3.356,165,2.715,166,1.726,167,1.726,168,2.359,169,1.726,170,1.726,171,1.726,172,1.726,173,1.726,174,2.715,175,2.235,176,1.654,177,1.421,178,1.919,179,0.95,180,1.726,181,1.726,182,1.726,183,1.726,184,1.726,185,1.726,186,1.726,187,1.726,188,1.726,189,2.715,190,1.726,191,1.421,192,1.421,193,1.726,194,1.726,195,1.726,196,1.726,197,2.715,198,2.715,199,2.715,200,2.715,201,1.726,202,1.726,203,1.726,204,1.726,205,1.726,206,1.726]],["title/modules/PostModule.html",[28,1.076,42,1.639]],["body/modules/PostModule.html",[2,1.76,3,0.325,4,0.275,5,0.275,11,0.037,16,1.052,17,0.769,20,0.325,21,0.081,26,0.026,27,0.026,28,1.64,30,1.279,31,1.279,32,1.589,33,1.589,34,1.279,35,2.499,36,1.589,41,2.61,42,3.043,44,2.186,45,1.589,46,1.422,48,3.269,52,1.043,53,1.422,55,2.377,150,2.814,176,2.61,177,2.377,207,2.377,208,2.887,209,2.377,210,2.887,211,2.887]],["title/injectables/PostService.html",[56,1.076,176,1.467]],["body/injectables/PostService.html",[3,0.211,4,0.178,5,0.178,7,0.553,8,1.282,11,0.038,12,1.642,14,2.1,15,1.554,16,0.761,17,0.499,20,0.211,21,0.053,23,1.947,24,1.905,26,0.019,27,0.019,52,1.554,56,1.046,57,1.031,68,1.593,69,2.812,70,2.046,71,2.046,72,2.046,76,2.466,77,2.19,78,1.591,79,2.466,81,2.046,84,3.213,85,2.046,88,2.046,98,1.161,100,1.161,118,3.55,122,3.54,123,1.542,124,2.192,125,1.324,126,1.542,129,2.118,140,1.426,141,2.5,145,1.542,146,1.542,175,3.275,176,1.426,178,2.046,179,2.608,212,1.542,213,2.894,214,1.873,215,1.873,216,1.873,217,1.873,218,1.873,219,2.894,220,1.873]],["title/classes/UpdateAuthorDto.html",[21,0.084,89,1.639]],["body/classes/UpdateAuthorDto.html",[3,0.426,4,0.36,5,0.36,11,0.037,16,1.02,20,0.426,21,0.106,26,0.031,27,0.031,63,1.366,68,2.081,74,1.863,89,2.61,99,2.672,128,2.672,221,3.113,222,3.904,223,4.742,224,3.113,225,2.672,226,2.672]],["title/classes/UpdatePostDto.html",[21,0.084,179,1.639]],["body/classes/UpdatePostDto.html",[3,0.426,4,0.36,5,0.36,11,0.037,16,1.02,20,0.426,21,0.106,26,0.031,27,0.031,63,1.366,68,2.081,129,1.863,131,2.672,178,2.672,179,2.61,222,3.904,224,3.113,225,2.672,226,2.672,227,3.113,228,4.742]],["title/classes/allPosts.html",[21,0.084,157,1.846]],["body/classes/allPosts.html",[3,0.412,4,0.348,5,0.348,7,1.079,11,0.037,12,1.678,15,1.939,20,0.412,21,0.103,26,0.03,27,0.03,63,1.321,78,1.856,140,2.287,157,2.878,229,3.009,230,5.101,231,5.101,232,3.655,233,3.655]],["title/coverage.html",[234,2.867]],["body/coverage.html",[0,1.817,1,1.485,5,0.228,6,1.972,11,0.038,18,1.18,21,0.148,26,0.023,27,0.023,34,1.062,43,1.062,52,0.866,53,1.18,56,1.626,58,1.972,62,1.062,64,1.972,65,1.485,66,1.972,74,1.18,78,0.958,89,1.319,96,1.18,115,1.972,124,1.485,127,1.972,128,2.46,129,1.18,130,1.972,131,2.46,132,1.972,136,1.694,139,1.972,150,1.485,151,1.972,157,1.485,168,1.485,176,1.18,179,1.319,212,1.972,221,1.972,227,1.972,229,1.972,234,1.694,235,1.972,236,2.396,237,2.396,238,5.763,239,3.48,240,3.48,241,5.143,242,1.972,243,2.396,244,3.48,245,1.972,246,3.48,247,2.396,248,2.396,249,2.396]],["title/dependencies.html",[31,1.586,250,2.05]],["body/dependencies.html",[11,0.039,17,0.987,21,0.132,26,0.03,27,0.03,31,1.642,225,2.618,226,2.618,251,5.133,252,3.704,253,3.704,254,3.704,255,3.704,256,3.704,257,3.05,258,3.704,259,3.704,260,3.704,261,3.704,262,3.704,263,3.704]],["title/miscellaneous/functions.html",[264,2.05,265,2.946]],["body/miscellaneous/functions.html",[7,1.284,11,0.033,26,0.033,27,0.033,34,2.442,242,3.581,264,3.581,265,3.581,266,4.349]],["title/index.html",[7,0.735,267,2.49,268,2.49]],["body/index.html",[4,0.146,11,0.035,26,0.016,27,0.016,46,2.055,62,0.68,125,1.084,234,1.084,235,2.034,269,1.533,270,1.533,271,3.103,272,2.471,273,1.533,274,1.533,275,1.533,276,1.533,277,2.471,278,1.262,279,3.103,280,1.533,281,1.533,282,1.533,283,3.559,284,1.533,285,3.559,286,4.564,287,1.533,288,4.387,289,1.533,290,1.533,291,1.533,292,2.471,293,1.533,294,2.471,295,1.533,296,3.103,297,1.533,298,2.471,299,1.533,300,1.533,301,1.533,302,1.533,303,1.533,304,3.559,305,4.564,306,4.171,307,1.533,308,2.471,309,1.533,310,1.533,311,1.533,312,1.533,313,1.533,314,4.171,315,2.471,316,3.559,317,1.533,318,2.471,319,1.533,320,1.533,321,2.471,322,4.171,323,3.559,324,1.533,325,2.471,326,1.533,327,1.533,328,1.533,329,1.533,330,3.559,331,1.533,332,1.533,333,1.533,334,1.533,335,2.471,336,1.533,337,1.533,338,1.533,339,1.533,340,1.533,341,2.471,342,1.533,343,1.533,344,1.533,345,2.471,346,1.533,347,1.533,348,2.93,349,2.471,350,1.533,351,1.533,352,1.533,353,1.533,354,1.533,355,1.533,356,1.533,357,1.533,358,2.471,359,1.533,360,1.533,361,1.533,362,1.533,363,3.103,364,1.533,365,1.533,366,1.533,367,1.533,368,1.533,369,1.533,370,2.471,371,1.533,372,1.533,373,1.533,374,1.533,375,2.471,376,1.533,377,1.533,378,1.533,379,2.471,380,2.471,381,1.533,382,1.533,383,1.533,384,1.533,385,1.533,386,1.533,387,1.533,388,1.533,389,1.533,390,1.533,391,1.533,392,1.533,393,1.533,394,1.533,395,1.533,396,1.533,397,1.533,398,1.262]],["title/modules.html",[30,1.797]],["body/modules.html",[11,0.031,26,0.031,27,0.031,29,2.445,30,1.748,40,2.171,41,1.943,42,2.171,348,4.54,399,5.514,400,5.514,401,5.514]],["title/overview.html",[402,3.339]],["body/overview.html",[2,1.186,11,0.037,18,2.148,26,0.024,27,0.024,28,0.967,29,3.536,30,1.186,31,1.186,32,1.473,33,1.473,34,1.186,35,1.473,36,1.473,37,2.203,38,2.203,39,2.203,40,2.745,41,2.618,42,2.925,43,2.404,44,2.074,45,1.473,46,1.318,57,1.473,63,0.967,96,2.148,111,2.203,112,2.203,133,2.203,135,2.203,176,2.148,207,2.203,209,2.203,402,2.203,403,3.767,404,2.676,405,2.676]],["title/classes/postAuthorDto.html",[21,0.084,168,1.846]],["body/classes/postAuthorDto.html",[3,0.313,4,0.265,5,0.265,7,0.822,10,2.761,11,0.038,12,1.74,15,1.74,16,0.599,20,0.313,21,0.109,26,0.025,27,0.025,63,1.006,77,2.451,78,1.925,118,2.738,140,1.908,168,2.401,191,3.666,192,3.666,245,2.292,257,2.292,406,4.453,407,2.784,408,2.784,409,2.784,410,2.784,411,3.873,412,2.784,413,3.873,414,2.784,415,3.873,416,3.873,417,2.784,418,2.784,419,2.784,420,2.784,421,2.784,422,2.784,423,2.784,424,2.784]],["title/properties.html",[140,1.763,250,2.05]],["body/properties.html",[11,0.038,26,0.033,27,0.033,62,1.883,140,2.093,278,3.498,398,3.498,425,4.248,426,4.248,427,4.248]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/postAuthorDto.html":{},"properties.html":{}}}],["0",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":426,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":404,"title":{},"body":{"overview.html":{}}}],["4",{"_index":403,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":405,"title":{},"body":{"overview.html":{}}}],["action",{"_index":122,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["adds",{"_index":123,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["age",{"_index":191,"title":{},"body":{"controllers/PostController.html":{},"classes/postAuthorDto.html":{}}}],["all.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{}}}],["all.module.ts",{"_index":137,"title":{},"body":{"modules/PostAllModule.html":{}}}],["all.service",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/PostAllModule.html":{},"controllers/PostController.html":{}}}],["all.service.ts",{"_index":139,"title":{},"body":{"injectables/PostAllService.html":{},"coverage.html":{}}}],["all.service.ts:6",{"_index":148,"title":{},"body":{"injectables/PostAllService.html":{}}}],["all.service.ts:8",{"_index":144,"title":{},"body":{"injectables/PostAllService.html":{}}}],["all/post",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["allowing",{"_index":336,"title":{},"body":{"index.html":{}}}],["allposts",{"_index":157,"title":{"classes/allPosts.html":{}},"body":{"controllers/PostController.html":{},"classes/allPosts.html":{},"coverage.html":{}}}],["amazing",{"_index":385,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":306,"title":{},"body":{"index.html":{}}}],["applications",{"_index":277,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":62,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["author.controller",{"_index":114,"title":{},"body":{"modules/AuthorModule.html":{}}}],["author.dto",{"_index":99,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts",{"_index":128,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["author.service",{"_index":97,"title":{},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{}}}],["author/author.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["authorcontroller",{"_index":65,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authormodule",{"_index":40,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules.html":{},"overview.html":{}}}],["authorservice",{"_index":96,"title":{"injectables/AuthorService.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":325,"title":{},"body":{"index.html":{}}}],["backers",{"_index":386,"title":{},"body":{"index.html":{}}}],["based",{"_index":320,"title":{},"body":{"index.html":{}}}],["board",{"_index":378,"title":{},"body":{"index.html":{}}}],["body",{"_index":92,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["body.age",{"_index":189,"title":{},"body":{"controllers/PostController.html":{}}}],["body.name",{"_index":190,"title":{},"body":{"controllers/PostController.html":{}}}],["body.sex",{"_index":193,"title":{},"body":{"controllers/PostController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":401,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":399,"title":{},"body":{"modules.html":{}}}],["building",{"_index":272,"title":{},"body":{"index.html":{}}}],["called",{"_index":147,"title":{},"body":{"injectables/PostAllService.html":{}}}],["catch",{"_index":174,"title":{},"body":{"controllers/PostController.html":{}}}],["channel",{"_index":351,"title":{},"body":{"index.html":{}}}],["check",{"_index":314,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"coverage.html":{},"dependencies.html":{},"classes/postAuthorDto.html":{}}}],["classes",{"_index":63,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"overview.html":{},"classes/postAuthorDto.html":{}}}],["clicks",{"_index":335,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":319,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":111,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":112,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_postallmodule",{"_index":133,"title":{},"body":{"modules/PostAllModule.html":{},"overview.html":{}}}],["cluster_postallmodule_exports",{"_index":135,"title":{},"body":{"modules/PostAllModule.html":{},"overview.html":{}}}],["cluster_postallmodule_providers",{"_index":134,"title":{},"body":{"modules/PostAllModule.html":{}}}],["cluster_postmodule",{"_index":207,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_imports",{"_index":208,"title":{},"body":{"modules/PostModule.html":{}}}],["cluster_postmodule_providers",{"_index":209,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["come",{"_index":342,"title":{},"body":{"index.html":{}}}],["console.log(typeof",{"_index":188,"title":{},"body":{"controllers/PostController.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/PostController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["controller('author",{"_index":101,"title":{},"body":{"controllers/AuthorController.html":{}}}],["controller('post",{"_index":184,"title":{},"body":{"controllers/PostController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["courses",{"_index":357,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":234,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":68,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{}}}],["create(@body",{"_index":102,"title":{},"body":{"controllers/AuthorController.html":{}}}],["create(createauthordto",{"_index":73,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["create(createpostdto",{"_index":213,"title":{},"body":{"injectables/PostService.html":{}}}],["createauthordto",{"_index":74,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["createpostdto",{"_index":129,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["data",{"_index":200,"title":{},"body":{"controllers/PostController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/PostController.html":{},"classes/postAuthorDto.html":{}}}],["deeper",{"_index":353,"title":{},"body":{"index.html":{}}}],["default",{"_index":145,"title":{},"body":{"injectables/PostAllService.html":{},"injectables/PostService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{}}}],["delete",{"_index":95,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["delete(':id",{"_index":86,"title":{},"body":{"controllers/AuthorController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":304,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":324,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":315,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":334,"title":{},"body":{"index.html":{}}}],["description",{"_index":278,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":289,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":365,"title":{},"body":{"index.html":{}}}],["discord",{"_index":350,"title":{},"body":{"index.html":{}}}],["dive",{"_index":352,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":235,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":98,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["dto/getallposts.query.dto",{"_index":181,"title":{},"body":{"controllers/PostController.html":{}}}],["dto/postauthor.body.dto",{"_index":180,"title":{},"body":{"controllers/PostController.html":{}}}],["dto/update",{"_index":100,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["e2e",{"_index":299,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":273,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":312,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":310,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":369,"title":{},"body":{"index.html":{}}}],["example",{"_index":285,"title":{},"body":{"index.html":{}}}],["experience",{"_index":355,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["exports:[postallservice",{"_index":138,"title":{},"body":{"modules/PostAllModule.html":{}}}],["express",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":222,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{}}}],["fast",{"_index":328,"title":{},"body":{"index.html":{}}}],["features",{"_index":338,"title":{},"body":{"index.html":{}}}],["few",{"_index":330,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"coverage.html":{},"classes/postAuthorDto.html":{}}}],["findall",{"_index":69,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["findone",{"_index":70,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["findone(@param('id",{"_index":105,"title":{},"body":{"controllers/AuthorController.html":{}}}],["findone(id",{"_index":81,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["focus",{"_index":337,"title":{},"body":{"index.html":{}}}],["follow",{"_index":372,"title":{},"body":{"index.html":{}}}],["framework",{"_index":271,"title":{},"body":{"index.html":{}}}],["full",{"_index":368,"title":{},"body":{"index.html":{}}}],["function",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":265,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":333,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":82,"title":{},"body":{"controllers/AuthorController.html":{}}}],["get(':postid",{"_index":162,"title":{},"body":{"controllers/PostController.html":{}}}],["get('allposts",{"_index":158,"title":{},"body":{"controllers/PostController.html":{}}}],["getallposts",{"_index":152,"title":{},"body":{"controllers/PostController.html":{}}}],["getallposts(@query",{"_index":195,"title":{},"body":{"controllers/PostController.html":{}}}],["getallposts(queryobj",{"_index":156,"title":{},"body":{"controllers/PostController.html":{}}}],["getauthor",{"_index":153,"title":{},"body":{"controllers/PostController.html":{}}}],["getauthor(@param('postid",{"_index":203,"title":{},"body":{"controllers/PostController.html":{}}}],["getauthor(postid",{"_index":161,"title":{},"body":{"controllers/PostController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmessega",{"_index":143,"title":{},"body":{"injectables/PostAllService.html":{}}}],["getting",{"_index":267,"title":{"index.html":{}},"body":{}}],["graph",{"_index":360,"title":{},"body":{"index.html":{}}}],["grow",{"_index":382,"title":{},"body":{"index.html":{}}}],["handlers",{"_index":183,"title":{},"body":{"controllers/PostController.html":{}}}],["hands",{"_index":354,"title":{},"body":{"index.html":{}}}],["handy",{"_index":343,"title":{},"body":{"index.html":{}}}],["hello",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":358,"title":{},"body":{"index.html":{}}}],["here",{"_index":390,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":170,"title":{},"body":{"controllers/PostController.html":{}}}],["httpexception",{"_index":172,"title":{},"body":{"controllers/PostController.html":{}}}],["httpexception('missing",{"_index":199,"title":{},"body":{"controllers/PostController.html":{}}}],["https://nestjs.com",{"_index":395,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":173,"title":{},"body":{"controllers/PostController.html":{}}}],["httpstatus.bad_request",{"_index":205,"title":{},"body":{"controllers/PostController.html":{}}}],["httpstatus.forbidden",{"_index":201,"title":{},"body":{"controllers/PostController.html":{}}}],["id",{"_index":84,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["identifier",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["if(!postid",{"_index":204,"title":{},"body":{"controllers/PostController.html":{}}}],["if(!queryobj.limit",{"_index":196,"title":{},"body":{"controllers/PostController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/postAuthorDto.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/allPosts.html":{},"miscellaneous/functions.html":{},"classes/postAuthorDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{}}}],["information",{"_index":317,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":340,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"injectables/PostService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"injectables/PostService.html":{},"overview.html":{}}}],["install",{"_index":332,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":287,"title":{},"body":{"index.html":{}}}],["interact",{"_index":361,"title":{},"body":{"index.html":{}}}],["isint",{"_index":415,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["isstring",{"_index":416,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["isstring()@notequals('tito",{"_index":409,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["job",{"_index":375,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":377,"title":{},"body":{"index.html":{}}}],["join",{"_index":388,"title":{},"body":{"index.html":{}}}],["json",{"_index":411,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["kamil",{"_index":392,"title":{},"body":{"index.html":{}}}],["key",{"_index":307,"title":{},"body":{"index.html":{}}}],["learn",{"_index":346,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["license",{"_index":398,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":380,"title":{},"body":{"index.html":{}}}],["limit",{"_index":230,"title":{},"body":{"classes/allPosts.html":{}}}],["linkedin",{"_index":374,"title":{},"body":{"index.html":{}}}],["logger",{"_index":175,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["logger(postcontroller.name",{"_index":185,"title":{},"body":{"controllers/PostController.html":{}}}],["logger(postservice.name",{"_index":219,"title":{},"body":{"injectables/PostService.html":{}}}],["looking",{"_index":318,"title":{},"body":{"index.html":{}}}],["loop",{"_index":371,"title":{},"body":{"index.html":{}}}],["makes",{"_index":326,"title":{},"body":{"index.html":{}}}],["managing",{"_index":339,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/postAuthorDto.html":{},"properties.html":{}}}],["mau",{"_index":322,"title":{},"body":{"index.html":{}}}],["max",{"_index":417,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["max(20",{"_index":424,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["maxlength",{"_index":418,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["maxlength(1",{"_index":413,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["message",{"_index":142,"title":{},"body":{"injectables/PostAllService.html":{}}}],["metadata",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["min",{"_index":419,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["min(10",{"_index":423,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["min(10)@max(20)@isint",{"_index":407,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["minlength",{"_index":420,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["miscellaneous",{"_index":264,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":379,"title":{},"body":{"index.html":{}}}],["mode",{"_index":292,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":316,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":393,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/postAuthorDto.html":{}}}],["need",{"_index":366,"title":{},"body":{"index.html":{}}}],["nest",{"_index":279,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":397,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":305,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":225,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":124,"title":{},"body":{"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["node.js",{"_index":270,"title":{},"body":{"index.html":{}}}],["notequals",{"_index":421,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["notequals(\"tito",{"_index":422,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["npm",{"_index":286,"title":{},"body":{"index.html":{}}}],["number",{"_index":118,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PostService.html":{},"classes/postAuthorDto.html":{}}}],["obj",{"_index":406,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["offer",{"_index":376,"title":{},"body":{"index.html":{}}}],["official",{"_index":323,"title":{},"body":{"index.html":{}}}],["olhar",{"_index":182,"title":{},"body":{"controllers/PostController.html":{}}}],["open",{"_index":381,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":402,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":250,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":94,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["part",{"_index":367,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":224,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{}}}],["partialtype(createauthordto",{"_index":223,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["partialtype(createpostdto",{"_index":228,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["patch",{"_index":93,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["patch(':id",{"_index":90,"title":{},"body":{"controllers/AuthorController.html":{}}}],["platform",{"_index":321,"title":{},"body":{"index.html":{}}}],["please",{"_index":349,"title":{},"body":{"index.html":{}}}],["possible",{"_index":313,"title":{},"body":{"index.html":{}}}],["post",{"_index":52,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthorController.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["post('postall",{"_index":165,"title":{},"body":{"controllers/PostController.html":{}}}],["post.controller",{"_index":211,"title":{},"body":{"modules/PostModule.html":{}}}],["post.dto",{"_index":178,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{}}}],["post.dto.ts",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["post.service",{"_index":177,"title":{},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{}}}],["post/post.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["postall",{"_index":154,"title":{},"body":{"controllers/PostController.html":{}}}],["postallmodule",{"_index":41,"title":{"modules/PostAllModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postallservice",{"_index":43,"title":{"injectables/PostAllService.html":{}},"body":{"modules/AppModule.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"coverage.html":{},"overview.html":{}}}],["postauthor",{"_index":155,"title":{},"body":{"controllers/PostController.html":{}}}],["postauthor(@body",{"_index":186,"title":{},"body":{"controllers/PostController.html":{}}}],["postauthor(body",{"_index":167,"title":{},"body":{"controllers/PostController.html":{}}}],["postauthordto",{"_index":168,"title":{"classes/postAuthorDto.html":{}},"body":{"controllers/PostController.html":{},"coverage.html":{},"classes/postAuthorDto.html":{}}}],["postcontroller",{"_index":150,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["postid",{"_index":164,"title":{},"body":{"controllers/PostController.html":{}}}],["postmodule",{"_index":42,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postservice",{"_index":176,"title":{"injectables/PostService.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/PostController.html":{}}}],["private",{"_index":141,"title":{},"body":{"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["production",{"_index":294,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":269,"title":{},"body":{"index.html":{}}}],["project",{"_index":283,"title":{},"body":{"index.html":{}}}],["properties",{"_index":140,"title":{"properties.html":{}},"body":{"injectables/PostAllService.html":{},"injectables/PostService.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["query",{"_index":171,"title":{},"body":{"controllers/PostController.html":{}}}],["queryobj",{"_index":160,"title":{},"body":{"controllers/PostController.html":{}}}],["queryobj.limit",{"_index":202,"title":{},"body":{"controllers/PostController.html":{}}}],["queryobj.skip",{"_index":197,"title":{},"body":{"controllers/PostController.html":{}}}],["questions",{"_index":347,"title":{},"body":{"index.html":{}}}],["read",{"_index":389,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["ready",{"_index":303,"title":{},"body":{"index.html":{}}}],["real",{"_index":362,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":71,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["remove(@param('id",{"_index":109,"title":{},"body":{"controllers/AuthorController.html":{}}}],["remove(id",{"_index":85,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["removes",{"_index":126,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["repository",{"_index":282,"title":{},"body":{"index.html":{}}}],["requiring",{"_index":329,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["resources",{"_index":341,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/postAuthorDto.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["run",{"_index":288,"title":{},"body":{"index.html":{}}}],["runs",{"_index":311,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":274,"title":{},"body":{"index.html":{}}}],["server",{"_index":275,"title":{},"body":{"index.html":{}}}],["setup",{"_index":284,"title":{},"body":{"index.html":{}}}],["sex",{"_index":192,"title":{},"body":{"controllers/PostController.html":{},"classes/postAuthorDto.html":{}}}],["side",{"_index":276,"title":{},"body":{"index.html":{}}}],["simple",{"_index":331,"title":{},"body":{"index.html":{}}}],["skip",{"_index":231,"title":{},"body":{"classes/allPosts.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePostDto.html":{},"classes/Post.html":{},"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"classes/allPosts.html":{},"index.html":{},"classes/postAuthorDto.html":{}}}],["sponsors",{"_index":384,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/author/author.controller.ts",{"_index":66,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{}}}],["src/author/author.controller.ts:11",{"_index":75,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:16",{"_index":80,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:21",{"_index":83,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:26",{"_index":91,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:31",{"_index":87,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.module.ts",{"_index":113,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/author/author.service.ts",{"_index":115,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/author/author.service.ts:11",{"_index":117,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:15",{"_index":119,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:19",{"_index":121,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:23",{"_index":120,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:7",{"_index":116,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/dto/create",{"_index":127,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/author/dto/update",{"_index":221,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["src/author/entities/author.entity.ts",{"_index":64,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/post",{"_index":136,"title":{},"body":{"modules/PostAllModule.html":{},"injectables/PostAllService.html":{},"coverage.html":{}}}],["src/post/dto/create",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/post/dto/getallposts.query.dto.ts",{"_index":229,"title":{},"body":{"classes/allPosts.html":{},"coverage.html":{}}}],["src/post/dto/getallposts.query.dto.ts:2",{"_index":232,"title":{},"body":{"classes/allPosts.html":{}}}],["src/post/dto/getallposts.query.dto.ts:3",{"_index":233,"title":{},"body":{"classes/allPosts.html":{}}}],["src/post/dto/postauthor.body.dto.ts",{"_index":245,"title":{},"body":{"coverage.html":{},"classes/postAuthorDto.html":{}}}],["src/post/dto/postauthor.body.dto.ts:11",{"_index":408,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["src/post/dto/postauthor.body.dto.ts:14",{"_index":414,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["src/post/dto/postauthor.body.dto.ts:16",{"_index":412,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["src/post/dto/postauthor.body.dto.ts:6",{"_index":410,"title":{},"body":{"classes/postAuthorDto.html":{}}}],["src/post/dto/update",{"_index":227,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/post/entities/post.entity.ts",{"_index":132,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/post/post.controller.ts",{"_index":151,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/post/post.controller.ts:17",{"_index":169,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:24",{"_index":166,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:29",{"_index":159,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:35",{"_index":163,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.module.ts",{"_index":210,"title":{},"body":{"modules/PostModule.html":{}}}],["src/post/post.service.ts",{"_index":212,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/post.service.ts:10",{"_index":214,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:14",{"_index":215,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:18",{"_index":216,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:22",{"_index":218,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:26",{"_index":217,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:8",{"_index":220,"title":{},"body":{"injectables/PostService.html":{}}}],["start",{"_index":290,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":293,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":295,"title":{},"body":{"index.html":{}}}],["started",{"_index":268,"title":{"index.html":{}},"body":{}}],["starter",{"_index":281,"title":{},"body":{"index.html":{}}}],["statements",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":370,"title":{},"body":{"index.html":{}}}],["steps",{"_index":308,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":327,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/allPosts.html":{},"classes/postAuthorDto.html":{}}}],["support",{"_index":348,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":400,"title":{},"body":{"modules.html":{}}}],["table",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":309,"title":{},"body":{"index.html":{}}}],["test",{"_index":298,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":301,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":300,"title":{},"body":{"index.html":{}}}],["tests",{"_index":296,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":383,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authorservice.create(createauthordto",{"_index":103,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findall",{"_index":104,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findone(+id",{"_index":106,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.remove(+id",{"_index":110,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.update(+id",{"_index":108,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.logger.warn(body",{"_index":187,"title":{},"body":{"controllers/PostController.html":{}}}],["this.message",{"_index":149,"title":{},"body":{"injectables/PostAllService.html":{}}}],["this.postallservice.getmessega",{"_index":194,"title":{},"body":{"controllers/PostController.html":{}}}],["throw",{"_index":198,"title":{},"body":{"controllers/PostController.html":{}}}],["time",{"_index":363,"title":{},"body":{"index.html":{}}}],["touch",{"_index":391,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":396,"title":{},"body":{"index.html":{}}}],["type",{"_index":78,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostAllService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/allPosts.html":{},"coverage.html":{},"classes/postAuthorDto.html":{}}}],["types",{"_index":226,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdatePostDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":280,"title":{},"body":{"index.html":{}}}],["unit",{"_index":297,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":427,"title":{},"body":{"properties.html":{}}}],["update",{"_index":72,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["update(@param('id",{"_index":107,"title":{},"body":{"controllers/AuthorController.html":{}}}],["update(id",{"_index":88,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/PostService.html":{}}}],["updateauthordto",{"_index":89,"title":{"classes/UpdateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["updatepostdto",{"_index":179,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updates",{"_index":125,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PostService.html":{},"index.html":{}}}],["user",{"_index":206,"title":{},"body":{"controllers/PostController.html":{}}}],["using",{"_index":364,"title":{},"body":{"index.html":{}}}],["validator",{"_index":257,"title":{},"body":{"dependencies.html":{},"classes/postAuthorDto.html":{}}}],["value",{"_index":146,"title":{},"body":{"injectables/PostAllService.html":{},"injectables/PostService.html":{}}}],["version",{"_index":425,"title":{},"body":{"properties.html":{}}}],["video",{"_index":356,"title":{},"body":{"index.html":{}}}],["visit",{"_index":345,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":359,"title":{},"body":{"index.html":{}}}],["watch",{"_index":291,"title":{},"body":{"index.html":{}}}],["website",{"_index":394,"title":{},"body":{"index.html":{}}}],["working",{"_index":344,"title":{},"body":{"index.html":{}}}],["world",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":373,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":387,"title":{},"body":{"index.html":{}}}],["you're",{"_index":302,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/PostAllModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nPostAllModule\n\nPostAllModule\n\nAppModule -->\n\nPostAllModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostAllService\n\nPostAllService\n\nAppModule -->\n\nPostAllService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PostAllService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorModule\n                        \n                        \n                            PostAllModule\n                        \n                        \n                            PostModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthorModule } from './author/author.module';\nimport { PostModule } from './post/post.module';\nimport { PostAllService } from './post-all/post-all.service';\nimport { PostAllModule } from './post-all/post-all.module';\n\n@Module({\n  imports: [AuthorModule, PostModule, PostAllModule],\n  controllers: [AppController],\n  providers: [AppService, PostAllService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/entities/author.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Author {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                author\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAuthorDto: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/author/author.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthorDto\n                                            \n                                                            CreateAuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/author/author.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/author/author.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/author/author.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/author/author.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthorDto\n                                            \n                                                            UpdateAuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\n\n@Controller('author')\nexport class AuthorController {\n  constructor(private readonly authorService: AuthorService) {}\n\n  @Post()\n  create(@Body() createAuthorDto: CreateAuthorDto) {\n    return this.authorService.create(createAuthorDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.authorService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authorService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAuthorDto: UpdateAuthorDto) {\n    return this.authorService.update(+id, updateAuthorDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authorService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorService\n\nAuthorService\n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/author/author.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { AuthorController } from './author.controller';\n\n@Module({\n  controllers: [AuthorController],\n  providers: [AuthorService],\n})\nexport class AuthorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/author/author.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthorDto\n                                            \n                                                            CreateAuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/author/author.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/author/author.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/author/author.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/author/author.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthorDto\n                                            \n                                                            UpdateAuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\n\n@Injectable()\nexport class AuthorService {\n  create(createAuthorDto: CreateAuthorDto) {\n    return 'This action adds a new author';\n  }\n\n  findAll() {\n    return `This action returns all author`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} author`;\n  }\n\n  update(id: number, updateAuthorDto: UpdateAuthorDto) {\n    return `This action updates a #${id} author`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} author`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/dto/create-author.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthorDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/create-post.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePostDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/entities/post.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostAllModule.html":{"url":"modules/PostAllModule.html","title":"module - PostAllModule","body":"\n                   \n\n\n\n\n    Modules\n    PostAllModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostAllModule\n\n\n\ncluster_PostAllModule_providers\n\n\n\ncluster_PostAllModule_exports\n\n\n\n\nPostAllService \n\nPostAllService \n\n\n\nPostAllModule\n\nPostAllModule\n\nPostAllService  -->\n\nPostAllModule->PostAllService \n\n\n\n\n\nPostAllService\n\nPostAllService\n\nPostAllModule -->\n\nPostAllService->PostAllModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post-all/post-all.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostAllService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PostAllService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostAllService } from './post-all.service';\n@Module({\n    providers: [PostAllService],\n    exports:[PostAllService]\n})\nexport class PostAllModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostAllService.html":{"url":"injectables/PostAllService.html","title":"injectable - PostAllService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostAllService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post-all/post-all.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessega\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessega\n                        \n                    \n                \n            \n            \n                \ngetMessega()\n                \n            \n\n\n                    \n                        \n                            Defined in src/post-all/post-all.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `postAllService called`\n                    \n                \n                    \n                        \n                                Defined in src/post-all/post-all.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PostAllService {\n\n    private readonly message : string = `postAllService called`;\n\n    getMessega(){\n        return this.message;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                post\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllPosts\n                            \n                            \n                                    \n                                getAuthor\n                            \n                            \n                                    \n                                postAll\n                            \n                            \n                                    \n                                postAuthor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPosts(queryObj: allPosts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('allPosts')\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryObj\n                                            \n                                                            allPosts\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthor(postId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':postId')\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    postAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('postAll')\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postAuthor\n                        \n                    \n                \n            \n            \n                \n                        \n                    postAuthor(body: postAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            postAuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, Query, HttpException, HttpStatus, Catch, Logger } from '@nestjs/common';\nimport { PostService } from './post.service';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport {postAuthorDto} from './dto/postAuthor.body.dto';\nimport {allPosts} from './dto/getAllPosts.query.dto';\nimport { PostAllService } from '../post-all/post-all.service';\n\n//olhar catch handlers \n@Controller('post') \nexport class PostController {\n\n  private readonly logger = new Logger(PostController.name);\n  constructor(private readonly postService: PostService, private postAllService : PostAllService) {}\n\n  @Post()\n  postAuthor(@Body() body: postAuthorDto){\n    this.logger.warn(body)\n    // console.log(typeof body.age)\n    return `Name: ${body.name} Age: ${body.age} Sex: ${body.sex}`\n  }\n\n  @Post('postAll')\n  postAll(){\n    return this.postAllService.getMessega();\n  }\n\n  @Get('allPosts')\n  getAllPosts(@Query() queryObj: allPosts){\n    if(!queryObj.limit || !queryObj.skip) throw new HttpException('missing data', HttpStatus.FORBIDDEN);\n    return `${queryObj.limit} and ${queryObj.skip}`;\n  }\n\n  @Get(':postId')\n  getAuthor(@Param('postId') postId : string){\n    if(!postId) throw new HttpException('missing data', HttpStatus.BAD_REQUEST);\n    return `user is ${postId}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_imports\n\n\n\ncluster_PostModule_providers\n\n\n\n\nPostAllModule\n\nPostAllModule\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostAllModule->PostModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PostAllModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostService } from './post.service';\nimport { PostController } from './post.controller';\nimport {PostAllModule} from '../post-all/post-all.module';\n@Module({\n  imports: [PostAllModule],\n  controllers: [PostController],\n  providers: [PostService],\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePostDto: UpdatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePostDto\n                                            \n                                                            UpdatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PostService.name)\n                    \n                \n                    \n                        \n                                Defined in src/post/post.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\n\n@Injectable()\nexport class PostService {\n\n  private readonly logger = new Logger(PostService.name);\n\n  create(createPostDto: CreatePostDto) {\n    return 'This action adds a new post';\n  }\n\n  findAll() {\n    return `This action returns all post`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} post`;\n  }\n\n  update(id: number, updatePostDto: UpdatePostDto) {\n    return `This action updates a #${id} post`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} post`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorDto.html":{"url":"classes/UpdateAuthorDto.html","title":"class - UpdateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/dto/update-author.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthorDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthorDto } from './create-author.dto';\n\nexport class UpdateAuthorDto extends PartialType(CreateAuthorDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/update-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePostDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/allPosts.html":{"url":"classes/allPosts.html","title":"class - allPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  allPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/getAllPosts.query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/post/dto/getAllPosts.query.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/post/dto/getAllPosts.query.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class allPosts{\n    limit : string;\n    skip: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/author/dto/update-author.dto.ts\n            \n            class\n            UpdateAuthorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/author/entities/author.entity.ts\n            \n            class\n            Author\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post-all/post-all.service.ts\n            \n            injectable\n            PostAllService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/dto/getAllPosts.query.dto.ts\n            \n            class\n            allPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/dto/postAuthor.body.dto.ts\n            \n            class\n            postAuthorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/post/dto/update-post.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/entities/post.entity.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostAllModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_PostAllModule\n\n\n\ncluster_PostAllModule_exports\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nPostAllModule\n\nPostAllModule\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostAllModule->PostModule\n\n\n\nAppModule -->\n\nPostAllModule->AppModule\n\n\n\n\n\nPostAllService \n\nPostAllService \n\nPostAllService  -->\n\nPostAllModule->PostAllService \n\n\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostAllService\n\nPostAllService\n\nPostAllModule -->\n\nPostAllService->PostAllModule\n\n\n\nAppModule -->\n\nPostAllService->AppModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/postAuthorDto.html":{"url":"classes/postAuthorDto.html","title":"class - postAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  postAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/postAuthor.body.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                obj\n                            \n                            \n                                    \n                                sex\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(10)@Max(20)@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/postAuthor.body.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@NotEquals('tito')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/postAuthor.body.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obj\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                    \n                        \n                                Defined in src/post/dto/postAuthor.body.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/postAuthor.body.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, Max, MaxLength, Min, MinLength, NotEquals } from \"class-validator\";\n\nexport class postAuthorDto{\n     @IsString()\t\n     @NotEquals(\"tito\")\n     name : string;\n\n     @Min(10)\n     @Max(20)\n     @IsInt()\n     age : number;\n\n     @MaxLength(1)\n     sex : string;\n\n     obj: JSON;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
